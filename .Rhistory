names(new_merged)[names(new_merged) == "city_tax"] <- "City_Tax_Due2017"
names(new_merged)[names(new_merged) == "school_tax"] <- "School_Tax_Due2017"
names(new_merged)[names(new_merged) == "lib_tax"] <- "Library_Tax_Due2017"
##Edit tax abatement information
new_merged$PROGRAM_NAME <- as.character(new_merged$PROGRAM_NAME)
new_merged$PROGRAM_NAME[new_merged$PROGRAM_NAME==""] <- "NA"
new_merged$PROGRAM_NAME <- as.factor(new_merged$PROGRAM_NAME)
new_merged$APPROVED_USER <- as.character(new_merged$APPROVED_USER)
new_merged$APPROVED_USER[new_merged$APPROVED_USER==""] <- "NA"
new_merged$APPROVED_USER <- as.factor(new_merged$APPROVED_USER)
##Map city region based on municipal description
new_merged <- transform(new_merged, REGION = as.factor(mapvalues(MUNIDESC, c("1st Ward  - PITTSBURGH", "2nd Ward - PITTSBURGH", "3rd Ward - PITTSBURGH", "4th Ward - PITTSBURGH",
"5th Ward - PITTSBURGH", "6th Ward - PITTSBURGH", "7th Ward - PITTSBURGH", "8th Ward - PITTSBURGH",
"9th Ward - PITTSBURGH", "10th Ward - PITTSBURGH", "11th Ward - PITTSBURGH", "12th Ward - PITTSBURGH",
"13th Ward - PITTSBURGH", "14th Ward - PITTSBURGH", "15th Ward - PITTSBURGH", "16th Ward - PITTSBURGH",
"17th Ward - PITTSBURGH", "18th Ward - PITTSBURGH", "19th Ward - PITTSBURGH", "20th Ward - PITTSBURGH",
"21st Ward - PITTSBURGH", "22nd Ward - PITTSBURGH", "23rd Ward - PITTSBURGH", "24th Ward - PITTSBURGH",
"25th Ward - PITTSBURGH", "26th Ward - PITTSBURGH", "27th Ward - PITTSBURGH", "28th Ward - PITTSBURGH",
"29th Ward - PITTSBURGH", "30th Ward - PITTSBURGH", "31st Ward - PITTSBURGH", "32nd Ward - PITTSBURGH"),
c("East End", "East End", "East End", "East End", "East End", "East End", "East End",
"East End", "East End", "East End", "East End", "East End", "East End", "East End", "East End",
"South Hills/Side", "South Hills/Side", "South Hills/Side", "South Hills/Side", "West End",
"North Side", "North Side", "North Side", "North Side", "North Side", "North Side", "North Side",
"West End", "South Hills/Side", "South Hills/Side", "South Hills/Side", "South Hills/Side"))))
city_parcels <- read.csv('./august_parcelcentroids.csv')
city_parcel_2 <- subset(city_parcels, geo_name_cousub == "Pittsburgh city")
143222-143100
load.new_parcel <- read.csv("./test_city_parcels.csv")
centroids <- read.csv("./WPRDC_Parcels.csv")
new_merged <- merge(load.new_parcel, centroids, by.x = "COUNTY_PIN", by.y = "PIN", all = TRUE)
new_merged <- subset(new_merged, NEIGHBORHOOD != 'MOUNT OLIVER BOROUGH')
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'LAST_SALE_DATE', 'BANKRUPT_FLAG', 'NEIGHBORHOOD',
'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR', 'APPROVED_USER',
'MAPBLOCKLO', 'geo_name_nhood', 'Pgh_Ward', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
summary(city_parcel_2$geo_name_nhood)
View(city_parcel_2)
67+281+1557+1052+173+844+3461+1756+4208+269+1484+511+3312+6491+864+4698+1575+1978+265+331+1125+1796+2209+1246+1864+1306+314+1620+1502+2236+381+883+280+386+1630+75+3566+416+3615+2134+2537+1777+2703+1705+1728+665+1922+1348+1491+2699+1957+1544+96+283+1297+110+298+4433+435+2084+2272+3451+2148+704+1659+2756+3988+387+388+896+158+3411+2952+806+1500+2820+772+614+812+2393+193+4725+222+1307+1343+1486+381+764+1582+757
missing_x_2 <- subset(city_parcel_2, is.na(city_parcel_2$geo_id_nhood))
View(missing_x_2)
load.new_parcel <- read.csv("./test_city_parcels.csv")
centroids <- read.csv("./august_parcelcentroids.csv")
centroids <- subset(centroids, geo_name_cousub == "Pittsburgh city")
new_merged <- merge(load.new_parcel, centroids, by.x = "COUNTY_PIN", by.y = "PIN", all = TRUE)
new_merged <- subset(new_merged, NEIGHBORHOOD != 'MOUNT OLIVER BOROUGH')
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'LAST_SALE_DATE', 'BANKRUPT_FLAG', 'NEIGHBORHOOD',
'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR', 'APPROVED_USER',
'MAPBLOCKLO', 'geo_name_nhood', 'Pgh_Ward', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
city_assessed <- read.csv('./city_assessed.csv')
new_merged <- merge(new_merged, city_assessed, by.x = "COUNTY_PIN", by.y = "PARID", all = TRUE)
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'geo_name_nhood', 'Pgh_Ward', 'MUNIDESC',
'TAXDESC', 'OWNERDESC', 'CLASSDESC', 'USEDESC', 'SALEDATE', 'SALEPRICE', 'COUNTYBUILDING', 'COUNTYLAND',
'COUNTYTOTAL', 'BANKRUPT_FLAG', 'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR',
'APPROVED_USER', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
new_merged <- merge(load.new_parcel, centroids, by.x = "COUNTY_PIN", by.y = "PIN", all = TRUE)
new_merged <- subset(new_merged, NEIGHBORHOOD != 'MOUNT OLIVER BOROUGH')
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'LAST_SALE_DATE', 'BANKRUPT_FLAG', 'NEIGHBORHOOD',
'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR', 'APPROVED_USER',
'MAPBLOCKLO', 'geo_name_nhood', 'Pgh_Ward', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
new_merged <- merge(new_merged, city_assessed, by.x = "COUNTY_PIN", by.y = "PARID", all.x = TRUE)
city_assessed <- read.csv('./city_assessed.csv')
new_merged <- merge(new_merged, city_assessed, by.x = "COUNTY_PIN", by.y = "PARID", all.x = TRUE)
missing_x <- subset(new_merged, is.na(new_merged$x))
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'geo_name_nhood', 'Pgh_Ward', 'MUNIDESC',
'TAXDESC', 'OWNERDESC', 'CLASSDESC', 'USEDESC', 'SALEDATE', 'SALEPRICE', 'COUNTYBUILDING', 'COUNTYLAND',
'COUNTYTOTAL', 'BANKRUPT_FLAG', 'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR',
'APPROVED_USER', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
View(new_merged)
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'geo_name_nhood', 'Pgh_Ward', 'MUNIDESC.x',
'TAXDESC.x', 'OWNERDESC.x', 'CLASSDESC.x', 'USEDESC.x', 'SALEDATE.x', 'SALEPRICE.x', 'COUNTYBUILDING.x', 'COUNTYLAND.x',
'COUNTYTOTAL.x', 'BANKRUPT_FLAG', 'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR',
'APPROVED_USER', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
new_merged <- new_merged[-c(1:12), ]
names(new_merged)[names(new_merged) == "CNTY_OWNER_NAME"] <- "OWNER"
names(new_merged)[names(new_merged) == "geo_name_nhood"] <- "Neighborhood"
names(new_merged)[names(new_merged) == "Pgh_Ward"] <- "Ward"
names(new_merged)[names(new_merged) == "city_tax"] <- "City_Tax_Due2017"
names(new_merged)[names(new_merged) == "school_tax"] <- "School_Tax_Due2017"
names(new_merged)[names(new_merged) == "lib_tax"] <- "Library_Tax_Due2017"
names(new_merged)[names(new_merged) == "MUNIDESC.x"] <- "MUNIDESC"
names(new_merged)[names(new_merged) == "TAXDESC.x"] <- "TAXDESC"
names(new_merged)[names(new_merged) == "OWNERDESC.x"] <- "OWNERDESC"
names(new_merged)[names(new_merged) == "CLASSDESC.x"] <- "CLASSDESC"
names(new_merged)[names(new_merged) == "USERDESC.x"] <- "USERDESC"
names(new_merged)[names(new_merged) == "SALEDATE.x"] <- "SALEDATE"
names(new_merged)[names(new_merged) == "SALEPRICE.x"] <- "SALEPRICE"
names(new_merged)[names(new_merged) == "COUNTYBUILDING.x"] <- "COUNTYBUILDING"
names(new_merged)[names(new_merged) == "COUNTYLAND.x"] <- "COUNTYLAND"
names(new_merged)[names(new_merged) == "COUNTYTOTAL.x"] <- "COUNTYTOTAL"
143101-131714
load.new_parcel <- read.csv("./test_city_parcels.csv")
centroids <- read.csv("./august_parcelcentroids.csv")
centroids <- subset(centroids, geo_name_cousub == "Pittsburgh city")
new_merged <- merge(load.new_parcel, centroids, by.x = "COUNTY_PIN", by.y = "PIN", all = TRUE)
new_merged <- subset(new_merged, NEIGHBORHOOD != 'MOUNT OLIVER BOROUGH')
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'LAST_SALE_DATE', 'BANKRUPT_FLAG', 'NEIGHBORHOOD',
'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR', 'APPROVED_USER',
'MAPBLOCKLO', 'geo_name_nhood', 'Pgh_Ward', 'x', 'y'))
missing_x <- subset(new_merged, is.na(new_merged$x))
city_assessed <- read.csv('./city_assessed.csv')
new_merged <- merge(new_merged, city_assessed, by.x = "COUNTY_PIN", by.y = "PARID", all.x = TRUE)
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'geo_name_nhood', 'Pgh_Ward', 'MUNIDESC.x',
'TAXDESC.x', 'OWNERDESC.x', 'CLASSDESC.x', 'USEDESC.x', 'SALEDATE.x', 'SALEPRICE.x', 'COUNTYBUILDING.x', 'COUNTYLAND.x',
'COUNTYTOTAL.x', 'BANKRUPT_FLAG', 'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR',
'APPROVED_USER', 'x', 'y'))
View(new_merged)
missing_x <- subset(new_merged, is.na(new_merged$x))
new_merged <- subset(new_merged, select = c('COUNTY_PIN', 'CITY_PIN', 'OWNER', 'ADDRESS', 'PROP_ZIP', 'geo_name_nhood', 'Pgh_Ward', 'MUNIDESC',
'TAXDESC', 'OWNERDESC', 'CLASSDESC', 'USEDESC', 'SALEDATE', 'SALEPRICE', 'COUNTYBUILDING', 'COUNTYLAND',
'COUNTYTOTAL', 'BANKRUPT_FLAG', 'HOMESTEAD', 'CURRENT_DELQ_TAX', 'PROGRAM_NAME', 'ABATEMENT_LENGTH', 'START_YEAR',
'APPROVED_USER', 'x', 'y'))
new_merged <- new_merged[-c(1:12), ]
names(new_merged)[names(new_merged) == "CNTY_OWNER_NAME"] <- "OWNER"
names(new_merged)[names(new_merged) == "geo_name_nhood"] <- "Neighborhood"
names(new_merged)[names(new_merged) == "Pgh_Ward"] <- "Ward"
names(new_merged)[names(new_merged) == "city_tax"] <- "City_Tax_Due2017"
names(new_merged)[names(new_merged) == "school_tax"] <- "School_Tax_Due2017"
names(new_merged)[names(new_merged) == "lib_tax"] <- "Library_Tax_Due2017"
new_merged$city_tax <- ifelse(new_merged$HOMESTEAD == "H", (new_merged$COUNTYTOTAL - 15000)*0.00806, (new_merged$COUNTYTOTAL * 0.00806))
new_merged$school_tax <- ifelse(new_merged$HOMESTEAD == "H", (new_merged$COUNTYTOTAL - 29447)*0.00984, (new_merged$COUNTYTOTAL * 0.00984))
new_merged$lib_tax <- ifelse(new_merged$HOMESTEAD == "H", (new_merged$COUNTYTOTAL - 15000)*0.00025, (new_merged$COUNTYTOTAL * 0.00025))
new_merged$city_tax <- dollarsComma(new_merged$city_tax)
new_merged$school_tax <- dollarsComma(new_merged$school_tax)
new_merged$lib_tax <- dollarsComma(new_merged$lib_tax)
new_merged$SALEPRICE <- dollarsComma(new_merged$SALEPRICE)
new_merged$COUNTYBUILDING <- dollarsComma(new_merged$COUNTYBUILDING)
new_merged$COUNTYLAND <- dollarsComma(new_merged$COUNTYLAND)
new_merged$COUNTYTOTAL <- dollarsComma(new_merged$COUNTYTOTAL)
dollarsComma <- function(x){
x <- round(x, 2)
x <- prettyNum(x, big.mark = ",")
x <- paste0("$", x)
return(x)
}
options(scipen = 999)
new_merged$city_tax <- ifelse(new_merged$HOMESTEAD == "H", (new_merged$COUNTYTOTAL - 15000)*0.00806, (new_merged$COUNTYTOTAL * 0.00806))
new_merged$school_tax <- ifelse(new_merged$HOMESTEAD == "H", (new_merged$COUNTYTOTAL - 29447)*0.00984, (new_merged$COUNTYTOTAL * 0.00984))
new_merged$lib_tax <- ifelse(new_merged$HOMESTEAD == "H", (new_merged$COUNTYTOTAL - 15000)*0.00025, (new_merged$COUNTYTOTAL * 0.00025))
new_merged$city_tax <- dollarsComma(new_merged$city_tax)
new_merged$school_tax <- dollarsComma(new_merged$school_tax)
new_merged$lib_tax <- dollarsComma(new_merged$lib_tax)
new_merged$SALEPRICE <- dollarsComma(new_merged$SALEPRICE)
new_merged$COUNTYBUILDING <- dollarsComma(new_merged$COUNTYBUILDING)
new_merged$COUNTYLAND <- dollarsComma(new_merged$COUNTYLAND)
new_merged$COUNTYTOTAL <- dollarsComma(new_merged$COUNTYTOTAL)
new_merged$PROGRAM_NAME <- as.character(new_merged$PROGRAM_NAME)
new_merged$PROGRAM_NAME[new_merged$PROGRAM_NAME==""] <- "NA"
new_merged$PROGRAM_NAME <- as.factor(new_merged$PROGRAM_NAME)
new_merged$APPROVED_USER <- as.character(new_merged$APPROVED_USER)
new_merged$APPROVED_USER[new_merged$APPROVED_USER==""] <- "NA"
new_merged$APPROVED_USER <- as.factor(new_merged$APPROVED_USER)
"5th Ward - PITTSBURGH", "6th Ward - PITTSBURGH", "7th Ward - PITTSBURGH", "8th Ward - PITTSBURGH",
"9th Ward - PITTSBURGH", "10th Ward - PITTSBURGH", "11th Ward - PITTSBURGH", "12th Ward - PITTSBURGH",
"13th Ward - PITTSBURGH", "14th Ward - PITTSBURGH", "15th Ward - PITTSBURGH", "16th Ward - PITTSBURGH",
"17th Ward - PITTSBURGH", "18th Ward - PITTSBURGH", "19th Ward - PITTSBURGH", "20th Ward - PITTSBURGH",
"21st Ward - PITTSBURGH", "22nd Ward - PITTSBURGH", "23rd Ward - PITTSBURGH", "24th Ward - PITTSBURGH",
"25th Ward - PITTSBURGH", "26th Ward - PITTSBURGH", "27th Ward - PITTSBURGH", "28th Ward - PITTSBURGH",
"29th Ward - PITTSBURGH", "30th Ward - PITTSBURGH", "31st Ward - PITTSBURGH", "32nd Ward - PITTSBURGH"),
c("East End", "East End", "East End", "East End", "East End", "East End", "East End",
"East End", "East End", "East End", "East End", "East End", "East End", "East End", "East End",
"South Hills/Side", "South Hills/Side", "South Hills/Side", "South Hills/Side", "West End",
"North Side", "North Side", "North Side", "North Side", "North Side", "North Side", "North Side",
"West End", "South Hills/Side", "South Hills/Side", "South Hills/Side", "South Hills/Side"))))
new_merged <- transform(new_merged, REGION = as.factor(mapvalues(MUNIDESC, c("1st Ward  - PITTSBURGH", "2nd Ward - PITTSBURGH", "3rd Ward - PITTSBURGH", "4th Ward - PITTSBURGH",
"5th Ward - PITTSBURGH", "6th Ward - PITTSBURGH", "7th Ward - PITTSBURGH", "8th Ward - PITTSBURGH",
"9th Ward - PITTSBURGH", "10th Ward - PITTSBURGH", "11th Ward - PITTSBURGH", "12th Ward - PITTSBURGH",
"13th Ward - PITTSBURGH", "14th Ward - PITTSBURGH", "15th Ward - PITTSBURGH", "16th Ward - PITTSBURGH",
"17th Ward - PITTSBURGH", "18th Ward - PITTSBURGH", "19th Ward - PITTSBURGH", "20th Ward - PITTSBURGH",
"21st Ward - PITTSBURGH", "22nd Ward - PITTSBURGH", "23rd Ward - PITTSBURGH", "24th Ward - PITTSBURGH",
"25th Ward - PITTSBURGH", "26th Ward - PITTSBURGH", "27th Ward - PITTSBURGH", "28th Ward - PITTSBURGH",
"29th Ward - PITTSBURGH", "30th Ward - PITTSBURGH", "31st Ward - PITTSBURGH", "32nd Ward - PITTSBURGH"),
c("East End", "East End", "East End", "East End", "East End", "East End", "East End",
"East End", "East End", "East End", "East End", "East End", "East End", "East End", "East End",
"South Hills/Side", "South Hills/Side", "South Hills/Side", "South Hills/Side", "West End",
"North Side", "North Side", "North Side", "North Side", "North Side", "North Side", "North Side",
"West End", "South Hills/Side", "South Hills/Side", "South Hills/Side", "South Hills/Side"))))
missing_ward <- subset(new_merged, is.na(new_merged$REGION))
write.csv(missing_ward, './missing_ward_parcels.csv')
missing_city_parcel <- subset(new_merged, is.na(new_merged$CITY_PIN))
write.csv(missing_city_parcel, './missing_city_parcelID.csv')
missing_nhood <- subset(new_merged, is.na(new_merged$Neighborhood))
View(missing_nhood)
write.csv(new_merged, './all_city_parcels.csv')
missing_x <- subset(new_merged, is.na(new_merged$x))
library(sp)
library(maptools)
library(raster)
library(dplyr)
setwd("Z:/Max_Apps/BEV/Finance/parcel_viewer")
city_parcels <- read.csv('./all_city_parcels.csv')
setwd("Z:/Max_Apps/BEV/Finance/parcel_viewer")
city_parcels <- read.csv('./all_city_parcels.csv')
parcels <- readShapeSpatial("allegheny_county_parcel_boundaries.shp")
cp_parcel_2 <- merge(parcels, city_parcels, by.x = "pin", by.y = "COUNTY_PIN", duplicateGeoms = TRUE)
cp_parcel_2 <- subset(cp_parcel_2, !is.na(cp_parcel_2$x))
ee_parcel <- subset(cp_parcel_2, REGION == "East End")
we_parcel <- subset(cp_parcel_2, REGION == "West End")
ns_parcel <- subset(cp_parcel_2, REGION == "North Side")
sh_parcel <- subset(cp_parcel_2, REGION == "South Hills/Side")
mw_parcel <- subset(sh_parcel, NEIGHBORHOOD == "Mount Washington")
mw_parcel <- subset(sh_parcel, Neighborhood == "Mount Washington")
View(mw_parcel)
bv_parcel <- subset(sh_parcel, Neighborhood == "Beechview")
View(bv_parcel)
ee_parcel$Neighborhood <- as.character(ee_parcel$Neighborhood)
ee_parcel$Neighborhood <- as.factor(ee_parcel$Neighborhood)
ee_parcel$CURRENT_DELQ_TAX[is.na(ee_parcel$CURRENT_DELQ_TAX)] <- 0
ee_parcel$PROGRAM_NAME <- as.character(ee_parcel$PROGRAM_NAME)
ee_parcel$PROGRAM_NAME[is.na(ee_parcel$PROGRAM_NAME)] <- "No Abatement"
ee_parcel$color_val <- ifelse(ee_parcel$PROGRAM_NAME == "No Abatement", "#ccc7c7", "#19eebe")
ee_parcel$color_val <- ifelse(ee_parcel$OWNER == "URBAN REDEVELOPMENT AUTH OF PITTSBURGH", "#a820b8", ee_parcel$color_val)
ee_parcel$color_val <- ifelse(ee_parcel$OWNER == "CITY OF PITTSBURGH", "#f2f403", ee_parcel$color_val)
ee_parcel$color_val <- ifelse(ee_parcel$CURRENT_DELQ_TAX > 0, "#f20303", ee_parcel$color_val)
ns_parcel$Neighborhood <- as.character(ns_parcel$Neighborhood)
ns_parcel$Neighborhood <- as.factor(ns_parcel$Neighborhood)
ns_parcel$CURRENT_DELQ_TAX[is.na(ns_parcel$CURRENT_DELQ_TAX)] <- 0
ns_parcel$PROGRAM_NAME <- as.character(ns_parcel$PROGRAM_NAME)
ns_parcel$PROGRAM_NAME[is.na(ns_parcel$PROGRAM_NAME)] <- "No Abatement"
ns_parcel$color_val <- ifelse(ns_parcel$PROGRAM_NAME == "No Abatement", "#ccc7c7", "#19eebe")
ns_parcel$color_val <- ifelse(ns_parcel$OWNER == "URBAN REDEVELOPMENT AUTH OF PITTSBURGH", "#a820b8", ns_parcel$color_val)
ns_parcel$color_val <- ifelse(ns_parcel$OWNER == "CITY OF PITTSBURGH", "#f2f403", ns_parcel$color_val)
ns_parcel$color_val <- ifelse(ns_parcel$CURRENT_DELQ_TAX > 0, "#f20303", ns_parcel$color_val)
we_parcel$Neighborhood <- as.character(we_parcel$Neighborhood)
we_parcel$Neighborhood <- as.factor(we_parcel$Neighborhood)
we_parcel$CURRENT_DELQ_TAX[is.na(we_parcel$CURRENT_DELQ_TAX)] <- 0
we_parcel$PROGRAM_NAME <- as.character(we_parcel$PROGRAM_NAME)
we_parcel$PROGRAM_NAME[is.na(we_parcel$PROGRAM_NAME)] <- "No Abatement"
we_parcel$color_val <- ifelse(we_parcel$PROGRAM_NAME == "No Abatement", "#ccc7c7", "#19eebe")
we_parcel$color_val <- ifelse(we_parcel$OWNER == "URBAN REDEVELOPMENT AUTH OF PITTSBURGH", "#a820b8", we_parcel$color_val)
we_parcel$color_val <- ifelse(we_parcel$OWNER == "CITY OF PITTSBURGH", "#f2f403", we_parcel$color_val)
we_parcel$color_val <- ifelse(we_parcel$CURRENT_DELQ_TAX > 0, "#f20303", we_parcel$color_val)
sh_parcel$Neighborhood <- as.character(sh_parcel$Neighborhood)
sh_parcel$Neighborhood <- as.factor(sh_parcel$Neighborhood)
sh_parcel$CURRENT_DELQ_TAX[is.na(sh_parcel$CURRENT_DELQ_TAX)] <- 0
sh_parcel$PROGRAM_NAME <- as.character(sh_parcel$PROGRAM_NAME)
sh_parcel$PROGRAM_NAME[is.na(sh_parcel$PROGRAM_NAME)] <- "No Abatement"
sh_parcel$color_val <- ifelse(sh_parcel$PROGRAM_NAME == "No Abatement", "#ccc7c7", "#19eebe")
sh_parcel$color_val <- ifelse(sh_parcel$OWNER == "URBAN REDEVELOPMENT AUTH OF PITTSBURGH", "#a820b8", sh_parcel$color_val)
sh_parcel$color_val <- ifelse(sh_parcel$OWNER == "CITY OF PITTSBURGH", "#f2f403", sh_parcel$color_val)
sh_parcel$color_val <- ifelse(sh_parcel$CURRENT_DELQ_TAX > 0, "#f20303", sh_parcel$color_val)
bv_par <- subset(sh_parcel, Neighborhood == "Beechview")
View(bv_par)
writeSpatialShape(ee_parcel, "east_end_parcels")
writeSpatialShape(we_parcel, "west_end_parcels")
writeSpatialShape(ns_parcel, "north_side_parcels")
writeSpatialShape(sh_parcel, "south_hill_parcels")
setwd("Z:/Max_Apps/BEV/Finance/parcel_viewer")
library(shiny)
library(shinythemes)
library(plyr)
library(sp)
library(rgeos)
library(maptools)
library(leaflet)
library(rgdal)
library(proj4)
library(raster)
east_end <- readShapeSpatial("east_end_parcels.shp")
west_end <- readShapeSpatial("west_end_parcels.shp")
north_side <- readShapeSpatial("north_side_parcels.shp")
south_hills <- readShapeSpatial("south_hill_parcels.shp")
hoods_e <- levels(east_end$Neighborho)
hoods_w <- levels(west_end$Neighborho)
hoods_n <- levels(north_side$Neighborho)
hoods_s <- levels(south_hills$Neighborho)
hood_list <- unlist(list(hoods_e, hoods_w, hoods_n, hoods_s))
hood_list <- sort(hood_list)
mw_parcels <- subset(south_hills, Neighborhood == "Mount Washington")
mw_parcels <- subset(south_hills, Neighborho == "Mount Washington")
View(mw_parcels)
runApp()
View(bv_par)
runApp()
hood_list
hoods_s
levels(south_hills$Neighborho)
summary(south_hills$Neighborho)
summary(west_end$Neighborho)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
.libPaths("C:/util")
shiny::runApp()
runApp()
runApp()
runApp()
reg_biz <- read.csv('./isat_biz.csv')
setwd("Z:/")
reg_biz <- read.csv('./isat_biz.csv')
reg_biz <- subset(reg_biz, ACCOUNT_TYPE == "B")
reg_biz <- subset(reg_biz, REGISTRATION_STATUS == "R")
levels(reg_biz$CITY)
419+29
3964+150
4114-865
3249-200
library(shiny)
library(leaflet)
library(zoo)
library(lubridate)
library(dplyr)
require(ggmap)
options(scipen = 999)
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
setwd("C:/Users/cerconm/AppData/Local/Temp/scp27203/home/linadmin/Max_Apps/Snow Angel/app")
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
setwd("C:/Users/cerconm/AppData/Local/Temp/scp27203/home/linadmin/Max_Apps/Snow Angel/app")
setwd("Z:/Max_Apps/Snow Angel/app")
library(shiny)
library(leaflet)
library(zoo)
library(lubridate)
library(dplyr)
require(ggmap)
options(scipen = 999)
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
load.snow_angel_geocoded <- subset(load.snow_angel_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Address_Street", "City",
"State", "ARC_ZIP", "Phone_Number", "Alternate_Number_1", "Alternate_Number_2",
"Email", "Matched..Y.N.", "Matched.With", "lon", "lat"))
id.max <- as.numeric(max(load.snow_angel_geocoded$ID))
load.volunteers <- read.csv("./volunteers.csv")
load.volunteers_geocoded <- read.csv("./volunteers_geocoded.csv")
load.volunteers_geocoded <- subset(load.volunteers_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Street", "City", "State",
"ARC_ZIP", "Phone_Number", "Alternate_Phone_Number", "Email",
"How_did_you_hear_about_the_program_", "InPGHLimits", "Matched..Y.N.",
"Matched.With", "lon", "lat"))
setwd("Z:/Max_Apps/BEV/Finance/parcel_viewer")
east_end <- readShapeSpatial("east_end_parcels.shp")
west_end <- readShapeSpatial("west_end_parcels.shp")
north_side <- readShapeSpatial("north_side_parcels.shp")
south_hills <- readShapeSpatial("south_hill_parcels.shp")
hoods_e <- levels(east_end$Neighborho)
hoods_w <- levels(west_end$Neighborho)
hoods_n <- levels(north_side$Neighborho)
hoods_s <- levels(south_hills$Neighborho)
hood_list <- unlist(list(hoods_e, hoods_w, hoods_n, hoods_s))
hood_list <- sort(hood_list)
runApp('Z:/Max_Apps/Snow Angel/app')
runApp('Z:/Max_Apps/Snow Angel/app')
runApp('Z:/Max_Apps/Snow Angel/app')
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
load.snow_angel_geocoded <- subset(load.snow_angel_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Address_Street", "City",
"State", "ARC_ZIP", "Phone_Number", "Alternate_Number_1", "Alternate_Number_2",
"Email", "Matched..Y.N.", "Matched.With", "lon", "lat"))
id.max <- as.numeric(max(load.snow_angel_geocoded$ID))
load.snow_angel <- read.csv("./snowangel.csv")
#Subset non-geocded by ID #
load.snow_angel.1 <- subset(load.snow_angel, ID > id.max)
if (nrow(load.snow_angel.1) > 0) {
load.snow_angel.1$Address_Street <- paste0(load.snow_angel.1$Address_Street, ", Pittsburgh, PA ", load.snow_angel.1$ARC_ZIP)
XY <- geocode(load.snow_angel.1$Address_Street)
load.snow_angel <- cbind(load.snow_angel.1, XY)
#rbind function to join old geocoded with new
load.snow_angel <- rbind(load.snow_angel_geocoded, load.snow_angel)
} else {
load.snow_angel <- load.snow_angel_geocoded
}
setwd("Z:/Max_Apps/Snow Angel/app")
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
load.snow_angel_geocoded <- subset(load.snow_angel_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Address_Street", "City",
"State", "ARC_ZIP", "Phone_Number", "Alternate_Number_1", "Alternate_Number_2",
"Email", "Matched..Y.N.", "Matched.With", "lon", "lat"))
id.max <- as.numeric(max(load.snow_angel_geocoded$ID))
load.snow_angel <- read.csv("./snowangel.csv")
#Subset non-geocded by ID #
load.snow_angel.1 <- subset(load.snow_angel, ID > id.max)
if (nrow(load.snow_angel.1) > 0) {
load.snow_angel.1$Address_Street <- paste0(load.snow_angel.1$Address_Street, ", Pittsburgh, PA ", load.snow_angel.1$ARC_ZIP)
XY <- geocode(load.snow_angel.1$Address_Street)
load.snow_angel <- cbind(load.snow_angel.1, XY)
#rbind function to join old geocoded with new
load.snow_angel <- rbind(load.snow_angel_geocoded, load.snow_angel)
} else {
load.snow_angel <- load.snow_angel_geocoded
}
View(load.snow_angel)
load.volunteers_geocoded <- read.csv("./volunteers_geocoded.csv")
load.volunteers_geocoded <- subset(load.volunteers_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Street", "City", "State",
"ARC_ZIP", "Phone_Number", "Alternate_Phone_Number", "Email",
"How_did_you_hear_about_the_program_", "InPGHLimits", "Matched..Y.N.",
"Matched.With", "lon", "lat"))
id.max.1 <- as.numeric(max(load.volunteers_geocoded$ID))
load.volunteers <- read.csv("./volunteers.csv")
#Subset non-geocded by ID #
load.volunteers.1 <- subset(load.volunteers, ID > id.max.1)
if (nrow(load.volunteers.1) > 0) {
load.volunteers.1$Street <- paste0(load.volunteers.1$Street, ", Pittsburgh, PA ", load.volunteers.1$ARC_ZIP)
XY.1 <- geocode(load.volunteers.1$Street)
load.volunteers <- cbind(load.volunteers.1, XY.1)
#rbind function to join old geocoded with new
load.volunteers <- rbind(load.volunteers_geocoded, load.volunteers)
} else {
load.volunteers <- load.volunteers_geocoded
}
View(load.volunteers.1)
View(load.volunteers)
View(load.volunteers_geocoded)
load.snow_angel_geocoded <- read.csv("./snow_angel_geocoded.csv")
load.snow_angel_geocoded <- subset(load.snow_angel_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Address_Street", "City",
"State", "ARC_ZIP", "Phone_Number", "Alternate_Number_1", "Alternate_Number_2",
"Email", "Matched..Y.N.", "Matched.With", "lon", "lat"))
id.max <- as.numeric(max(load.snow_angel_geocoded$ID))
load.snow_angel <- read.csv("./snowangel.csv")
#Subset non-geocded by ID #
load.snow_angel.1 <- subset(load.snow_angel, ID > id.max)
if (nrow(load.snow_angel.1) > 0) {
load.snow_angel.1$Address_Street <- paste0(load.snow_angel.1$Address_Street, ", Pittsburgh, PA ", load.snow_angel.1$ARC_ZIP)
XY <- geocode(load.snow_angel.1$Address_Street)
load.snow_angel <- cbind(load.snow_angel.1, XY)
#rbind function to join old geocoded with new
load.snow_angel <- rbind(load.snow_angel_geocoded, load.snow_angel)
} else {
load.snow_angel <- load.snow_angel_geocoded
}
load.volunteers_geocoded <- read.csv("./volunteers_geocoded.csv")
load.volunteers_geocoded <- subset(load.volunteers_geocoded, select = c("ID", "Prefix", "Firstname", "Lastname", "Street", "City", "State",
"ARC_ZIP", "Phone_Number", "Alternate_Phone_Number", "Email",
"How_did_you_hear_about_the_program_", "InPGHLimits", "Matched..Y.N.",
"Matched.With", "lon", "lat"))
id.max.1 <- as.numeric(max(load.volunteers_geocoded$ID))
load.volunteers <- read.csv("./volunteers.csv")
#Subset non-geocded by ID #
load.volunteers.1 <- subset(load.volunteers, ID > id.max.1)
if (nrow(load.volunteers.1) > 0) {
load.volunteers.1$Street <- paste0(load.volunteers.1$Street, ", Pittsburgh, PA ", load.volunteers.1$ARC_ZIP)
XY.1 <- geocode(load.volunteers.1$Street)
load.volunteers <- cbind(load.volunteers.1, XY.1)
#rbind function to join old geocoded with new
load.volunteers <- rbind(load.volunteers_geocoded, load.volunteers)
} else {
load.volunteers <- load.volunteers_geocoded
}
View(load.volunteers)
runApp()
runApp()
runApp()
runApp()
total_parcels <- rbind(east_end, west_end, north_side, south_hills)
total_parcels <- rbind(east_end, west_end, north_side, south_hills, makeUniqueIDs = TRUE)
total_parcels <- subset(total_parcels, select = c("CITY_PIN", "OWNER", "ADDRESS", "PROP_ZIP", "Neighborho", "Ward", "MUNIDESC", "TAXDESC", "OWNERDESC", "CLASSDESC",
"USEDESC", "SALEDATE", "SALEPRICE", "COUNTYBUIL", "COUNTYLAND", "COUNTYTOTA", "BANKRUPT_F", "HOMESTEAD",
"CURRENT_DE", "PROGRAM_NA", "ABATEMENT_", "START_YEAR", "APPROVED_U", "city_tax", "school_tax", "lib_tax"))
total_parcels <- as.data.frame(total_parcels)
total_parcels <- rbind(east_data(), west_data(), north_data(), south_data(), makeUniqueIDs = TRUE)
east_data <- east_end
west_data <- west_end
north_data <- north_side
setwd("Z:/Max_Apps/BEV/Finance/parcel_viewer")
runApp()
runApp()
2009-4
2005-3
2002-5
2002-6
13-4
2016-2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(total_parcels)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
levels(east_end$CLASSDESC)
runApp('Z:/Max_Apps/Tax_Delinquency/app')
runApp()
runApp()
levels(east_end$PROGRAM_NA)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
.libPaths("C:/util")
setwd("Z:/Max_Apps/BEV/Finance/parcel_viewer")
runApp()
install.packages(c("BH", "chron", "colorspace", "curl", "data.table", "digest", "dplyr", "dygraphs", "evaluate", "geosphere", "ggplot2", "ggvis", "googleVis", "gpclib", "highcharter", "htmlTable", "htmlwidgets", "irlba", "jsonlite", "knitr", "koRpus", "lubridate", "maps", "maptools", "mime", "mnormt", "openssl", "plotly", "plotrix", "plyr", "proto", "psych", "quantmod", "R6", "Rcpp", "reshape", "reshape2", "rgdal", "rgeos", "RgoogleMaps", "rmarkdown", "rsconnect", "RSQLite", "RXKCD", "scales", "shiny", "shinydashboard", "shinythemes", "sp", "stringi", "stringr", "tibble", "tidyr", "XML", "xml2", "yaml", "zoo"))
